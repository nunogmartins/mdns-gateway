<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
 There has to be one entity for each item to be referenced.
 An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6762 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6762.xml">
<!ENTITY RFC6763 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.cheshire-mdnsext-hybrid SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.cheshire-mdnsext-hybrid.xml">
<!ENTITY I-D.stenberg-homenet-dnssdext-hybrid-proxy-ospf SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.stenberg-homenet-dnssdext-hybrid-proxy-ospf.xml">
<!ENTITY I-D.lynn-homenet-site-mdns SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.lynn-homenet-site-mdns.xml">
]>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="info" docName="draft-bhandari-mdns-gateway-00"
     ipr="trust200902">
  <front>
    <title abbrev="mDNS across local links">Extending multicast DNS across
    local links in Campus and Enterprise networks</title>

    <author fullname="Shwetha Bhandari" initials="S." surname="Bhandari">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Cessna Business Park, Sarjapura Marathalli Outer Ring
          Road</street>

          <city>Bangalore</city>

          <region>KARNATAKA</region>

          <code>560 087</code>

          <country>India</country>
        </postal>

        <email>shwethab@cisco.com</email>
      </address>
    </author>

    <author fullname="Bhavik Fajalia" initials="B." surname="Fajalia">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Cessna Business Park, Sarjapura Marathalli Outer Ring
          Road</street>

          <city>Bangalore</city>

          <region>KARNATAKA</region>

          <code>560 087</code>

          <country>India</country>
        </postal>

        <email>bfajalia@cisco.com</email>
      </address>
    </author>

    <author fullname="Ralph Schmieder" initials="R." surname="Schmieder">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>City Plaza - 4th Floor</street>

          <city>STUTTGART, BADEN-WURTTEMBERG</city>

          <region></region>

          <code>70178</code>

          <country>GERMANY</country>
        </postal>

        <email>rschmied@cisco.com</email>
      </address>
    </author>

    <author fullname="Stephen Orr" initials="S." surname="Orr">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>1 Paragon Drive</street>

          <street></street>

          <city>Montvale</city>

          <region>NJ</region>

          <code>07645</code>

          <country>USA</country>
        </postal>

        <email>sorr@cisco.com</email>
      </address>
    </author>

    <author fullname="Amit Dutta" initials="A." surname="Dutta">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Cessna Business Park, Sarjapura Marathalli Outer Ring
          Road</street>

          <city>Bangalore</city>

          <region>KARNATAKA</region>

          <code>560 087</code>

          <country>India</country>
        </postal>

        <email>amdutta@cisco.com</email>
      </address>
    </author>

    <date day="15" month="June" year="2013" />

    <abstract>
      <t>This document describes the requirements for extending multicast DNS
      in enterprise network. It provides with an overview of solution to
      extend multicast DNS services across links as realized in Cisco network
      router, switch, wireless LAN controller systems.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>Service discovery using multicast DNS (mDNS) as defined in <xref
      target="RFC6762"></xref> is limited in scope to layer 3 boundaries due
      to the use of link-local scoped multicast address. Network are partioned
      into multiple segments by means of virtual local area network or subnet
      creation for various reasons. The need to continue discovering services
      across such links seamelessly demands extending dynamic service
      discovery protocol beyond layer 3 boundary. There are also challenges in
      wifi networks when a large number of multicast messages are exchanged
      due to existing 802.11 multicast implementation.</t>

      <t>Enabling Service Discovery across L3 boundaries can be accomplished
      in some of the following ways using existing protocols unmodified:</t>

      <t><list style="numbers">
          <t>Unicast DNS-SD only: Use of DNS server and allowing the client to
          use dynamic DNS updates and Long Lived Queries (LLQs) to announce
          and learn services dynamically</t>

          <t>mDNS only: Defining mDNS gateway entity at the L3 boundary that
          will extend services across the links attached to it</t>

          <t>Combination of unicast DNS and mDNS - Hybrid proxy approach as
          described in <xref target="I-D.cheshire-mdnsext-hybrid"></xref></t>

          <t>mDNS with extended scope multicast - Modifying mDNS to use a
          wider scope multicast address for message exchange</t>
        </list></t>

      <t>As a first step this draft lists out the approach to use mDNS gateway
      on a network element (approach 2) to extend the services across all the
      network segments attached to the element. While this approach does not
      preclude (1) or (3) the first attempt is to allow service extension in
      limited segments with minimal provisioning. Approach (4) is not explored
      further as it would add to the flood of service discovery messages in
      the scope defined by the multicast address.</t>

      <section title="Requirements">
        <t>This section describes requirements for extending multicast DNS in
        enterprise environment:<list style="numbers">
            <t>Extend service discovery across Layer 3 boundary</t>

            <t>Defining and enforcing policy to selectively filter services to
            be extended based on service type, service instance names</t>

            <t>Defining and enforcing policy to selectively filter queries and
            announcements from specific clients or over specific network
            link(s)</t>

            <t>Filtering of link local only information - Services that
            resolve to IPv4 and IPv6 Link Local addresses only must not be
            extended beyond local link. Resouce records that contain link
            local only information not to be propogated beyond the local
            link</t>

            <t>Optimize mDNS packets in wireless networks</t>

            <t>Effectively handle change of attachment (roaming events) to
            network by mobile devices that advertise services</t>

            <t>Limit the services in response to queries with a subset of the
            services that are in geographic proximity</t>

            <t>Handle conflict resolution of service instance and host names
            across the links where the service is extended</t>

            <t>Protection of resources of the network element that
            participates in extending multicast DNS</t>
          </list></t>
      </section>
    </section>

    <section title=" Conventions and Terminology Used in this Document   ">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in "Key words for use in
      RFCs to Indicate Requirement Levels" [RFC2119].</t>

      <t>This document uses the multicast DNS and DNS terminology and
      conventions from <xref target="RFC6762"></xref> and <xref
      target="RFC6763"></xref>. It uses the same convention for services on
      the same link as defined in [ID-cheshire-mdnsext-hybrid], repeated here
      for quick reference:</t>

      <t>Multicast Multicast DNS works between a hosts on the same link. A set
      of hosts is considered to be "on the same link", if:</t>

      <t>when any host A from that set sends a packet to any other host B in
      that set, using unicast, multicast, or broadcast, the entire link-layer
      packet payload arrives unmodified, and</t>

      <t>a broadcast sent over that link by any host from that set of hosts
      can be received by every other host in that set</t>

      <t>The link-layer *header* may be modified, such as in Token Ring Source
      Routing [802.5], but not the link-layer *payload*. In particular, if any
      device forwarding a packet modifies any part of the IP header or IP
      payload then the packet is no longer considered to be on the same link.
      This means that the packet may pass through devices such as repeaters,
      bridges, hubs or switches and still be considered to be on the same link
      for the purpose of this document, but not through a device such as an IP
      router that decrements the TTL or otherwise modifies the IP header.
      <list style="symbols">
          <t>mDNS gateway - An application that listens to services and
          extends the services across links</t>
        </list></t>
    </section>

    <section title="Solution overview">
      <t>The solution introduces mDNS gateway function is co-located on the
      network element that connects to multiple links and where Layer 3
      begins. The mDNS gateway function will be responsible for:</t>

      <t><list style="symbols">
          <t>Caching - Learn and caches services. Maintain services in the
          cache according to the TTL of the records.</t>

          <t>Respond to queries - Advertise in response to queries with
          services in the cache that are not in the same link local domain
          where the query is received.</t>

          <t>Service filtering - Filter services to be added to the cache and
          included in the advertisement as per configured policy</t>

          <t>Service redistribution - unsolicited announcement of services
          across links based on configuration</t>

          <t>Active query - Service queries sent by the mDNS gateway on one or
          more of the links it is attached to to learn services</t>
        </list></t>

      <t><figure>
          <artwork><![CDATA[   
                +------+-----+                 
                |    mDNS    |                    
                |  gateway   |                       
                +---+----+---+  
                    |... |
              link1 |    | linkn  
                    |    |
               _____|    |__________
              |                     |
         _----+----_           _----+----_
       _(           )_       _(           )_
      ( Hosts on Link1) ... ( Hosts on Linkn)
       (_           _)       (_           _)
         '----+----'           '----+----'


]]></artwork>
        </figure></t>

      <section title="Service Cache">
        <t>mDNS gateway maintains database of DNS Resource Records (RR)
        required to advertise and resolve services. At a minimum the cache
        will contain PTR, SRV,TXT, A/AAAA RR for each service. In addition the
        link on which the service and host are seen is also remembered
        required to refresh the records on TTL expiry.</t>
      </section>

      <section title="Service Filters">
        <t>Service filtering policy is configured to permit or deny services
        into the cache or to filter services included in the
        response/advertiment messages based on matching:</t>

        <t><list style="symbols">
            <t>Service type</t>

            <t>Service instance names</t>

            <t>Link on which the message is received</t>

            <t>Type of message - query or advertisement</t>

            <t>Location of the host querying or advertising a service</t>
          </list>Service filtering policy is applied for the incoming messages
        or outgoing messages. There can be different filtering policies
        applied on different links.</t>

        <t>When a message received by mDNS gateway matches the action set for
        the matching is executed. Example for an incoming advertisement is
        processed against the mDNS gateway filtering policy applied in the
        incoming direction on the link where the advertisement is received. If
        the action is permit the service is added to the cache. For a response
        or advertisment to be sent out filtering policy applied in the out
        direction is processed and if the action is to deny then the service
        and its corresponding RRs are not included in the message sent
        out.</t>
      </section>

      <section title="Service Announcement">
        <t>The mDNS gateway registers interest for all service announcements.
        When a service announcement is received based on the result of
        filtering the announcement and all the additional RRs learnt are added
        to the cache or ignored.</t>

        <t>The RRs containing link local information e.g. A or AAAA RR that
        contain link local scope addresses are not stored in the cache.</t>

        <t>When mDNS gateway learns a service it can also forward the
        advertisement on other attached links.</t>
      </section>

      <section title="Service Query">
        <t>The mDNS gateway processes all the queries against the filtering
        policy. If the response to the query is permitted then it constructs
        the answers and additional records required to resolve the service
        from its cache for the services that are permited. Services that
        reside on the same link where the query is received are not included
        as the owner of the service will also see the query and would send the
        response directly. Only services learnt from across the link are
        considered in the response.</t>

        <t>Any query received for additional RRs to resolve the service e.g.
        query for SRV, A, AAAA etc are also responded in the same way. If the
        records do not exist in the cache due to expiry or purging of cache
        for any other reason, mDNS gateway sends out an explicit query to
        fetch the records on the link where the service resides.</t>
      </section>

      <section title="Service update, withdraw">
        <t>When mDNS gateway received a service update or withdraw it updates
        or removes the service and all corresponding records from its cache.
        It forwards the withdraw messages to other links attached.</t>
      </section>

      <section title="Service Refresh">
        <t>The RRs describing the service and resolving it have a TTL that
        define the validity of the RR. The mDNS gateway can continuosly
        refresh each of the RRs in the cache as per the TTL rules. For the
        purpose of optimization mDNS gateway can rely on the host interested
        in the RRs to trigger a refresh by setting the TTLs in the response to
        time remaining since the record was learnt by mDNS gateway. If a
        client is interested in the RR then it would trigger a refresh when a
        % of TTL is reached. While responding to queries from hosts mDNS
        gateway inturn sends out queries to refresh the records that are about
        to expire on the link where the records were learnt.</t>
      </section>

      <section title="mDNS Gateway for Wireless Network">
        <t>Deploying mDNS gateway in wireless networks has a few additional
        requirements w.r.t to multicast radion optimization and mobility
        aspects. This section describes some of the unique feature added to
        mDNS gateway to satisfy these requirements.</t>

        <section title="Advertising service on wireless network">
          <t>In order to conserved wireless bandwidth due to limitation of
          multicast implemenation in 802.11, mDNS gateway sends service
          advertisements to wireless devices as L2 unicast messages.</t>

          <t>In a wireless network, the mDNS gateway co-located on the network
          element that bridges the link local multicast packetscan act as
          passive device and respond only if wireless clients sends a mDNS
          query. Bridging of link local mDNS messages can be turned off basd
          on configuration. This is useful in the following scenario:</t>

          <t><list style="numbers">
              <t>Save computation resources on the device which are used to
              replicate the multicast packet as layer 2 unicast for all
              wireless clients.</t>

              <t>If the wireless client is in power saving mode, sending mDNS
              advertisement as layer 2 unicast would forcefully awake the
              client and it would result into more power consumtion by
              wireless clients.</t>
            </list></t>

          <t>mDNS functionality is not impacted by acting as passive gateway
          because client would always send mDNS query when it wants to avail
          any service.</t>
        </section>

        <section title="Device Tracking">
          <t>Wireless clients are mobile in nature. mDNS gateway should learn
          the service instance only from the authenticaed wireless client.
          mDNS gateway should tag each service instance from wireless client
          with the client's mac address. This mac address should be used for
          device tracking. If the wireless client leaves the network, gateway
          should not wait till TTL expiry but it should actively clean up the
          service instance provided by that wireless client. This is done to
          protect the mDNS gateway cache resources.</t>
        </section>

        <section title="Mobility Considerations">
          <t>Wireless deployments supports seamless mobility. In such a
          scenario, mDNS gateway needs to be aware of the client location and
          if the location changes, mDNS gateway needs to update its mDNS
          cache. mDNS gateway should tag each service instance with the device
          location. Device location can be derived based on the Access
          Point(AP) to which wireless client is attached. If the client who is
          providing any service changes its location, same needs to be
          reflected in mDNS gateway. If the client roams from one mDNS gateway
          to another other mDNS gateway, then the old gateway should provide
          the service instance information pertaining to the roamed client to
          the new gateway and then it must clear the mDNS cache for the
          client. If the mDNS gateway is not acting as passive gateway, it may
          choose to update the network about the new service instance it has
          learnt.</t>
        </section>

        <section title="mDNS traffic optimization">
          <t>All mDNS packets are sent to multicast link local ip address.
          When mDNS gateway starts forwarding the mDNS advertisements across
          VLAN then the number of such advertisement on any network would
          increase. 802.11 wireless netowrk is half duplex so any packet on
          air would need to contend for the wireless medium to transmit the
          packet. If there are many mDNS packets going on air then it would
          impact other data traffic. Hence mDNS traffic optimization is
          required.</t>

          <t>When services are advertised each records comes with its TTL
          value. When TTL expires, gateway needs to send query (85%, 90% and
          95% of TTL) for that record to confirm validity of the record. If
          the TTL value of each record is different, then mDNS gateway needs
          to send query for individual record. To minimize the mDNS traffic
          queries for multiple RRs that for the service record set can be
          initiated towards the source of the service. Suce a query can be
          sent with QU bit set as described in <xref target="RFC6762"></xref>
          to solicit a unicast response.</t>

          <t>mDNS gateway for wireless network should act as passive gateway
          as explained in [section:Advertisng service on wireless network].
          This would save some of the wireless bandwidth too.</t>
        </section>
      </section>
    </section>

    <section title="Challenges">
      <t>This section lists out limitations and challenges faced as part of
      the realizing the solution described in this draft.</t>

      <t><list style="numbers">
          <t>Name conflict resolution across links: Name conflict resolution
          depends on the probing following by registration by the host that is
          providing a service. Name conflict resolution across links depends
          on the mDNS gateway cache to have exhaustive list of names always
          hence able to respond to probe requests. However this may not always
          be posible due to timing issues when the cache get updated, records
          having expired from the cache etc</t>

          <t>Multihomed hosts: There is also the case of a multihomed host
          connected via multiple links to the same mDNS gateway that may end
          up wrongly assuming conflict and getting into a continuous renaming
          loop.</t>

          <t>Multiple mDNS gateways on the link: If there are multiple mDNS
          gateways enabled on the same link queries may get duplicate
          responses.</t>

          <t>Loops in the network: If there i a loop in the network and
          multiple mDNS gateways are enabled in such a loop it may end up
          continuosly recycling the service around the loop and keeping the
          RRs alive forever.</t>

          <t>Refreshing resource records: Balancing excessive number of
          queries to maintain the records in the cache Vs having the cache up
          to date with all the known record names leads to optimizations that
          may lead to corner cases where wrong result or conflicts arise.</t>
        </list></t>
    </section>

    <section title="Future work">
      <t>The solution documented here is limited to extending services in a
      across links attached to a single network element. For a wider area
      service discovery solution described in <xref
      target="I-D.cheshire-mdnsext-hybrid"></xref> should be realized with any
      provisioning as needed.</t>

      <t>Similar to auto provisioning and realization of the hybrid proxy
      approach for homenet as described in <xref
      target="I-D.stenberg-homenet-dnssdext-hybrid-proxy-ospf"></xref> a
      solution needs to be built for enterprise and campus networks extending
      the what i described in this draft.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document makes no request of IANA.</t>

      <t>Note to RFC Editor: this section may be removed on publication as an
      RFC.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>N/A</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t></t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &RFC2119;

      &RFC6762;

      &RFC6763;

      &I-D.cheshire-mdnsext-hybrid;

      &I-D.stenberg-homenet-dnssdext-hybrid-proxy-ospf;
    </references>
  </back>
</rfc>
